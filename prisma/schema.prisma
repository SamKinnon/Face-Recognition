// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  fullName     String
  address      String
  nationalId   String   @unique
  email        String?  @unique
  faceEncoding Json
  wallet       String?
  role         Role     @default(VOTER)
  createdAt    DateTime @default(now())

  votes        Vote[]
}

model Vote {
  id         Int      @id @default(autoincrement())
  election   Election @relation(fields: [electionId], references: [id])
  electionId Int

  candidate  Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int

  voter      User      @relation(fields: [userId], references: [id])
  userId     Int
}



model Election {
  id          Int       @id @default(autoincrement())
  title       String
  type        String     // "presidential", "parliament", "kigali-city"
  startDate   DateTime
  endDate     DateTime
  isPublished Boolean    @default(false)
  createdAt DateTime @default(now())


  candidates  Candidate[]
  votes       Vote[]
}

model Candidate {
  id         Int       @id @default(autoincrement())
  fullName   String
  party      String?
  photoUrl   String?

  election   Election  @relation(fields: [electionId], references: [id])
  electionId Int

  votes      Vote[]
}

enum Role {
  ADMIN
  VOTER
}